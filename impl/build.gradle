/*
 * Copyright Terracotta, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'org.ehcache.build.deploy'
  id 'biz.aQute.bnd.builder'
  id 'org.jayware.osgi-ds'
}

sourceSets {
  unsafe {
    java {
      srcDir 'src/unsafe/java'
    }
  }
  java9 {
    java
  }
}

dependencies {
  api project(':core')
  implementation group: 'org.terracotta', name: 'offheap-store', version: parent.offheapVersion
  implementation (group: 'org.ehcache', name: 'sizeof', version: parent.sizeofVersion) {
    exclude group:'org.slf4j', module:'slf4j-api'
  }
  compileOnly 'org.osgi:org.osgi.service.component.annotations:1.3.0'
  testImplementation project(':core-spi-test')
  testImplementation 'org.ow2.asm:asm:6.2'
  testImplementation 'org.ow2.asm:asm-commons:6.2'
  testImplementation ("org.terracotta:statistics:$parent.statisticVersion")

  unsafeImplementation project(':api')
  unsafeCompileOnly "com.github.spotbugs:spotbugs-annotations:${project.spotbugs.toolVersion}"
  api files(sourceSets.unsafe.output.classesDirs) {
    builtBy compileUnsafeJava
  }

  java9Implementation project(':api')
  java9Implementation files(sourceSets.unsafe.output.classesDirs) {
    builtBy compileUnsafeJava
  }
  java9Implementation files(sourceSets.main.output.classesDirs) {
    builtBy compileJava
  }
}

compileJava9Java {
  sourceCompatibility = 9
  targetCompatibility = 9

  options.fork = true
  options.forkOptions.javaHome = java9.javaHome
}

jar {
  from sourceSets.unsafe.output
  from "$rootDir/NOTICE"

  into ('META-INF/versions/9') {
    from sourceSets.java9.output
  }
  manifest.attributes (
    'Multi-Release': 'true'
  )
  bnd (
    'Export-Package': '!org.ehcache.impl.internal.*, org.ehcache.impl.*, org.ehcache.config.builders, ' +
      'org.ehcache.impl.internal.spi.loaderwriter', //ugly 107 induced internal export wart
    'Import-Package': '!sun.misc, !javax.annotation, *',
    '-fixupmessages.mrjar': '"Classes found in the wrong directory";is:=warning'
  )
}

sourceJar {
  from sourceSets.unsafe.allSource
}

compileUnsafeJava {
  //no -Werror due to unsafe
  options.compilerArgs = ['-Xlint:all']
}

test {
  dependsOn jar
  classpath = files(jar.archiveFile, classpath) - sourceSets.main.output
}

if (!testJava.javaVersion.isJava9Compatible()) {
  check.dependsOn(tasks.register('testJava9', Test) {
    dependsOn jar
    classpath = files(jar.archiveFile, classpath) - sourceSets.main.output
    executable = java9.javaExecutable
  })
}
